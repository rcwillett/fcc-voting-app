angular.module("pollApp",["ngRoute","toastr"]).run(["$rootScope","$location","loginService","appConstants",function(o,t,l,e){o.loading=!0,o.loggedIn=!1,l.isLoggedIn().then(function(t){o.loggedIn=t.data.status,o.loading=!1},function(t){o.loggedIn=!1,o.loading=!1}),o.$on("$routeChangeStart",function(l,n,r){o.loggedIn||n.$$route&&e.restrictedRoutes.indexOf(n.$$route.originalPath)>-1&&t.path("/login")})}]).config(["$routeProvider","appConstants",function(o,t){o.when("/viewPoll/:pollId",{templateUrl:"/public/js/app/templates/poll.html",controller:"pollViewController"}).when("/createPoll",{templateUrl:"/public/js/app/templates/createEditPoll.html",controller:"createEditPollController",createEdit:t.createEditEnum.create}).when("/editPoll/:pollId",{templateUrl:"/public/js/app/templates/createEditPoll.html",controller:"createEditPollController",createEdit:t.createEditEnum.edit}).when("/pollStats/:pollId",{templateUrl:"/public/js/app/templates/pollStats.html",controller:"pollStatsController"}).when("/myPolls",{templateUrl:"/public/js/app/templates/userPolls.html",controller:"userPollController"}).when("/login",{templateUrl:"/public/js/app/templates/login.html",controller:"loginController"}).otherwise({templateUrl:"/public/js/app/templates/home.html",controller:"pollController"})}]),angular.module("pollApp").constant("appConstants",{createEditEnum:{create:0,edit:1},restrictedRoutes:["/myPolls","/createPoll","/pollStats","/editPoll"]}),angular.module("pollApp").service("loginService",["$rootScope","$http",function(o,t){var l=this;return l.login=function(){return t.get("/auth/github")},l.logout=function(){return t.get("/logout")},l.isLoggedIn=function(){return t.get("/isLoggedIn")},l}]),angular.module("pollApp").service("pollNotifier",["toastr",function(o){return{success:function(t){o.success(t)},failure:function(t){o.fail(t)}}}]),angular.module("pollApp").service("pollService",["$http",function(o){var t=this;return t.getPoll=function(t){return o({method:"GET",url:"/poll/"+t})},t.getPolls=function(t){return o({method:"GET",url:"/polls",params:{numItems:t}})},t.getUserPolls=function(t){return o({method:"GET",url:"/userPolls"})},t.createPoll=function(t){return o({method:"POST",url:"/addPoll",data:t})},t.editPoll=function(t){return o({method:"POST",url:"/addPoll",data:t})},t.addPollOption=function(t,l){return o({method:"POST",url:"/addPollOption",data:{pollId:t,optionText:l},type:"application/json"})},t.vote=function(t,l){return o({method:"POST",url:"/vote",data:{pollId:t,optionId:l},type:"application/json"})},t}]),angular.module("pollApp").service("userService",["$http",function(o){var t=this;return t.getUserInfo=function(){return o({method:"GET",url:"/getUserInfo"})},t}]),angular.module("pollApp").controller("createEditPollController",["$scope","$timeout","$route","$routeParams","pollService","appConstants",function(o,t,l,e,n,r){function i(o){window.location="/#!/viewPoll/"+o.data.pollId}function p(o){401===o.status||403===o.status?window.location.href="/#!/login":(u.error=!0,u.errorMessage=o.message)}function a(o,t,l,e){this.pollId=o,this.name=t,this.description=l,this.options=e}function s(){t(function(){o.$apply()})}o.vm={};var u=o.vm;u.addOption=function(){if(u.errorMsg="",0===u.pollOptions.length||""!==u.pollOptions[u.pollOptions.length-1].optionText){var o=u.pollOptions.length;u.pollOptions.push({optionId:o,optionText:""})}else u.errorMsg="The poll option text must not be empty before adding another option"},u.removeOption=function(o){u.pollOptions.splice(o,1),u.pollOptions.forEach(function(o,t){o.optionId=t}),s()},u.submitPoll=function(){u.errorMsg="",u.pollOptions.length>1&&l.current.$$route.createEdit===r.createEditEnum.edit?n.editPoll(new a(u.pollId,u.pollTitle,u.pollDescription,u.pollOptions)).then(i,p):u.pollOptions.length>1?n.createPoll(new a(u.pollId,u.pollTitle,u.pollDescription,u.pollOptions)).then(i,p):u.errorMsg="You must have at least one option for your poll"},l.current.$$route.createEdit===r.createEditEnum.edit?n.getPoll(e.pollId).then(function(o){u.pollId=o.data.pollInfo.id,u.pollTitle=o.data.pollInfo.name,u.pollDescription=o.data.pollInfo.description,u.pollOptions=o.data.pollInfo.options,u.submitText="Update Poll"},function(o){u.unexpectedError=!0}):(u.pollTitle="",u.pollDescription="",u.pollId=null,u.pollOptions=[{optionId:0,optionText:""}],u.submitText="Create Poll")}]),angular.module("pollApp").controller("loginController",["$scope","$rootScope","$routeParams","loginService",function(o,t,l,e){function n(o){t.loggedIn=!0,window.location.href="/"}function r(o){i.error=!0}o.vm={};var i=o.vm;i.logInWithGit=function(){e.login().then(n,r)},i.showError=Boolean(l.error),i.errorMessage="Login Failed, Please Try Again"}]),angular.module("pollApp").controller("menuController",["$scope","$rootScope","loginService",function(o,t,l){function e(){t.loggedIn=!1,window.location.href="/"}function n(){t.error=!0}(o.menuVm={}).logOut=function(){l.logout().then(e,n)}}]),angular.module("pollApp").controller("pollStatsController",["$routeParams","$scope","$timeout","pollService",function(o,t,l,e){function n(o,t,l){var e=document.getElementById("bar-chart-results").getContext("2d");new Chart(e,{type:"bar",data:{labels:o,datasets:[{label:"# of Votes",data:t,backgroundColor:l,borderWidth:1}]},options:{scales:{yAxes:[{ticks:{beginAtZero:!0},label:"# of Votes"}]}},responsive:!0})}function r(o,t,l){var e=document.getElementById("pie-chart-results").getContext("2d");new Chart(e,{type:"pie",data:{labels:o,datasets:[{label:"# of Votes",data:t,backgroundColor:l,borderWidth:1}]},options:{},responsive:!0})}function i(o,t){var l,e,n,r=t/o,i=~~(6*r),p=6*r-i,a=1-p;switch(i%6){case 0:l=1,e=p,n=0;break;case 1:l=a,e=1,n=0;break;case 2:l=0,e=1,n=p;break;case 3:l=0,e=a,n=1;break;case 4:l=p,e=0,n=1;break;case 5:l=1,e=0,n=a}return"#"+("00"+(~~(255*l)).toString(16)).slice(-2)+("00"+(~~(255*e)).toString(16)).slice(-2)+("00"+(~~(255*n)).toString(16)).slice(-2)}t.vm={};var p=t.vm;p.unexpectedError=!1,p.optionResults=[],null!=o.pollId&&""!==o.pollId?e.getPoll(o.pollId).then(function(o){p.poll=o.data.pollInfo;var e=[],a=[],s=[];p.poll.options.forEach(function(o,t,l){e.push(o.optionText),a.push(o.numTimesSelected),s.push(i(l.length,t))}),n(e,a,s),r(e,a,s),l(function(){t.$apply()})},function(o){p.unexpectedError=!0}):window.location.href="/404"}]),angular.module("pollApp").controller("pollViewController",["$routeParams","$scope","$rootScope","$timeout","pollService","pollNotifier",function(o,t,l,e,n,r){function i(o){g.poll=o.data.pollInfo,g.selectedOption=o.data.userSelection?g.poll.options[o.data.userSelection]:g.poll.options[0],g.facebookShareLink="https://www.facebook.com/sharer/sharer.php?u="+window.encodeURI(window.location.href),g.twitterShareLink="https://twitter.com/home?status="+window.encodeURI(window.location.href)}function p(){n.vote(o.pollId,g.selectedOption.optionId).then(function(o){r.success("Option Selection Successful")})}function a(){t.newOptionForm.newPollOption.$error.required||t.newOptionForm.newPollOption.$error.pattern||n.addPollOption(o.pollId,g.newPollOption).then(s,d)}function s(o){g.newOptionFormVisible=!1,g.addNewOptionVisible=!1,g.poll=o.data.data,r.success("New Option Added")}function u(){l.loggedIn&&c()}function c(){g.newOptionFormVisible=!0,g.addNewOptionVisible=!1}function d(o){r.failure(o.message)}t.vm={};var g=t.vm;g.unexpectedError=!1,g.newOptionFormVisible=!1,g.addNewOptionVisible=!0,g.submitSelection=p,g.submitNewOption=a,g.addNewOption=u,g.inputValidationPattern=/[a-zA-Z0-9]/,g.newPollOption="",null!=o.pollId&&""!==o.pollId?n.getPoll(o.pollId).then(i,d):window.location.href="/404"}]),angular.module("pollApp").controller("pollController",["$scope","pollService",function(o,t){o.pollArray=[],t.getPolls(10).then(function(t){o.pollArray=t.data})}]),angular.module("pollApp").controller("userPollController",["$scope","pollService",function(o,t){function l(o){n.pollArray=o.data,n.loading=!1}function e(o){401!==o.status&&403!==o.status||(window.location.href="/#!/login")}o.vm={};var n=o.vm;n.loading=!0,n.error=!1,n.pollArray=[],n.generateStatsLink=function(o){return"#!pollStats/"+o},n.generateEditLink=function(o){return"#!editPoll/"+o},t.getUserPolls().then(l,e)}]);
//# sourceMappingURL=../maps/site.min.js.map
